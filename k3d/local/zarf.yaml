# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/main/zarf.schema.json
kind: ZarfPackageConfig
metadata:
  name: k3d-local
  description: Defense Unicorns k3d environment
  architecture: amd64
  authors: "@runyontr, @timblaktu"
  source: https://github.com/defenseunicorns/uds-package-dubbd/k3d/local
  vendor: Defense Unicorns
constants:
  - name: DL_BASE_URL
    value: "###ZARF_PKG_TMPL_DL_BASE_URL###"
  - name: K3D_CLUSTER_NAME
    value: "###ZARF_PKG_TMPL_K3D_CLUSTER_NAME###"
  - name: INIT_COMPONENTS
    value: "###ZARF_PKG_TMPL_INIT_COMPONENTS###"
components:
  - name: k3d
    description: 'Create k3d cluster named ###ZARF_PKG_TMPL_K3D_CLUSTER_NAME###'
    required: true
    files:
      - source: scripts/k3d.sh
        target: scripts/k3d.sh
        executable: true
    actions:
      onDeploy:
        after:
          - cmd: './scripts/k3d.sh ###ZARF_PKG_TMPL_K3D_CLUSTER_NAME###'
      onRemove:
        after:
          - cmd: 'k3d cluster delete ###ZARF_PKG_TMPL_K3D_CLUSTER_NAME###'
  - name: init
    description: 'Deploy zarf init package with components: (###ZARF_PKG_TMPL_INIT_COMPONENTS###) to k3d cluster ###ZARF_PKG_TMPL_K3D_CLUSTER_NAME###'
    required: true
    files:
      - source: init.tar.zst
        target: init.tar.zst
    actions:
      onCreate:
        before:
          - cmd: |
              F="downloads/zarf-init-###ZARF_PKG_ARCH###-$(zarf version).tar.zst";
              if [ -f "$F" ]; then
                echo "Using cached zarf init package: $F..."
              else
                (set -x; ./zarf tools download-init -o downloads)
              fi
              cp -f "$F" init.tar.zst
              ls -lath *.zst downloads
      onDeploy:
        after:
          - cmd: "./zarf package deploy init.tar.zst --components '###ZARF_PKG_TMPL_INIT_COMPONENTS###' --confirm -l warn"
  - name: metallb
    required: true
    files:
      - source: scripts/metallb.sh
        target: scripts/metallb.sh
        executable: true
    actions:
      onDeploy:
        after:
          - cmd: ./scripts/metallb.sh
    manifests:
      - name: metallb
        files:
          - manifests/metallb/metallb-native.yaml
    images:
      - quay.io/metallb/controller:v0.13.10
      - quay.io/metallb/speaker:v0.13.10
  - name: finish
    required: true
    actions:
      onDeploy:
        after:
          - cmd: |
              echo "k3d cluster ###ZARF_PKG_TMPL_K3D_CLUSTER_NAME### has been zarf initialized:"
              (set -x; ./zarf tools kubectl config view; ./zarf tools kubectl get pods -A)
