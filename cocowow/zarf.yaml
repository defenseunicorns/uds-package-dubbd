# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/main/zarf.schema.json
kind: ZarfPackageConfig
metadata:
  name: cocowow
  description: "CoCoWoW"
  version: "###ZARF_PKG_TMPL_BIGBANG_VERSION###"
  url: https://p1.dso.mil/products/big-bang
  image: https://p1.dso.mil/img/Big_Bang_Color_Logo_White_text.de14c793.webp
  # Big Bang / Iron Bank are only amd64
  architecture: amd64

variables:
  - name: REALM
    default: cocowow
    prompt: false

components:
  - name: load-certs
    required: true
    import:
      path: ../defense-unicorns-distro
    files:
      - source: ../defense-unicorns-distro/scripts/cat_keycloak_cert.sh
        target: cat_keycloak_cert.sh
        executable: true
      - source: ../defense-unicorns-distro/scripts/cat_keycloak_key.sh
        target: cat_keycloak_key.sh
        executable: true
    actions:
      onDeploy:
        after:
        - cmd: ./cat_keycloak_cert.sh
          description: read the cert
          setVariables:
          - name: KEYCLOAK_CERT   
        - cmd: ./cat_keycloak_key.sh
          description: read the cert
          setVariables:
          - name: KEYCLOAK_KEY
  - name: cocowow
    required: true
    import:
      path: ../defense-unicorns-distro
      name: bigbang
    images:
      - registry1.dso.mil/ironbank/big-bang/p1-keycloak-plugin:3.2.0
    extensions:
      bigbang:
        version: "###ZARF_PKG_TMPL_BIGBANG_VERSION###"
        valuesFiles:
        # look at imports and then merging here for composition
        - ../values/authservice.yaml
        - ../values/keycloak.yaml
        - customization.yaml
  - name: configure-keycloak
    required: false
    files:
      - source: https://github.com/keycloak/keycloak/releases/download/21.0.1/keycloak-21.0.1.tar.gz
        target: keycloak.tar.gz
    actions:
      onDeploy:
        after:
          - cmd: rm -rf kc-api && tar xf keycloak.tar.gz && rm keycloak.tar.gz && mv keycloak-21.0.1 kc-api
            description: Untar the keycloak files
          - cmd: bash -c 'until [ $(curl -L -s -o /dev/null -w "%{http_code}" https://keycloak.###ZARF_PKG_TMPL_DOMAIN###/auth/admin) -eq 200 ]; do sleep 60; echo "Trying to connect to the Keycloak endpoint..."; done'
            description: Wait for Keycloak endpoint to accept requests
          - cmd: ./kc-api/bin/kcadm.sh config credentials --realm master --server https://keycloak.###ZARF_PKG_TMPL_DOMAIN###/auth --user admin --password password
            description: Login into keycloak as admin and save the config for future commands
          - cmd: ./kc-api/bin/kcadm.sh create realms -s realm=###ZARF_PKG_TMPL_REALM### -s enabled=true
            description: Create the Cocowow realm
          - cmd: ./kc-api/bin/kcadm.sh create users -r ###ZARF_PKG_TMPL_REALM### -s username=demo -s email=demo@example.com -s enabled=true 
            description: Update the 'demo' user's password
          - cmd: ./kc-api/bin/kcadm.sh set-password -r ###ZARF_PKG_TMPL_REALM### --username demo --new-password supersecretpassword --temporary
            description: Update the 'demo' user's password
          - cmd: ./kc-api/bin/kcadm.sh create clients -r ###ZARF_PKG_TMPL_REALM### -s clientId=tempo -s enabled=true -s 'redirectUris=["https://tracing.###ZARF_PKG_TMPL_DOMAIN###/login"]'
            description: "Add tempo client in keycloak"
          - cmd: ./kc-api/bin/kcadm.sh create clients -r ###ZARF_PKG_TMPL_REALM### -s clientId=kiali -s enabled=true -s 'redirectUris=["https://kiali.###ZARF_PKG_TMPL_DOMAIN###/kiali"]'
            description: "Add grafana client in keycloak"
          - cmd: ./kc-api/bin/kcadm.sh create clients -r ###ZARF_PKG_TMPL_REALM### -s clientId=grafana -s enabled=true -s 'redirectUris=["https://grafana.###ZARF_PKG_TMPL_DOMAIN###/login/generic_oauth"]'
            description: "Add kiali client in keycloak"
          - cmd: ./kc-api/bin/kcadm.sh create clients -r ###ZARF_PKG_TMPL_REALM### -s clientId=prometheus -s enabled=true -s 'redirectUris=["https://prometheus.###ZARF_PKG_TMPL_DOMAIN###/login/generic_oauth"]'
            description: "Add kiali client in keycloak"
          - cmd: ./kc-api/bin/kcadm.sh create clients -r ###ZARF_PKG_TMPL_REALM### -s clientId=alertmanager -s enabled=true -s 'redirectUris=["https://alertmanager.###ZARF_PKG_TMPL_DOMAIN###/login/generic_oauth"]'
            description: "Add kiali client in keycloak"
          - cmd: ./kc-api/bin/kcadm.sh create clients -r ###ZARF_PKG_TMPL_REALM### -s clientId=neuvector -s enabled=true -s 'redirectUris=["https://neuvector.###ZARF_PKG_TMPL_DOMAIN###/openId_auth"]'
            description: "Add neuvector client in keycloak"
          - cmd: ./scripts/update-admin-services-sso.sh 
            description: Update the chain data for the cluster's admin services
