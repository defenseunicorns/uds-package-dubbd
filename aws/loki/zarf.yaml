# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/main/zarf.schema.json
kind: ZarfPackageConfig
metadata:
  name: dubbd-aws-loki-iac
  description: "Defense Unicorns Big Bang Distro"
  # x-release-please-start-version
  version: "0.2.4"
  # x-release-please-end
  url: https://p1.dso.mil/products/big-bang
  image: https://p1.dso.mil/img/Big_Bang_Color_Logo_White_text.de14c793.webp
  # Big Bang / Iron Bank are only amd64
  architecture: amd64

variables:
  - name: TERRAFORM_VERSION
  - name: TERRAFORM_PROVIDER_AWS_VERSION

  - name: STATE_BUCKET_NAME
    description: "Name of the pre-existing Terraform state S3 bucket"
  - name: STATE_KEY
    description: "Path to the state file key in the state bucket"
  - name: STATE_DYNAMODB_TABLE_NAME
    description: "Name of the DynamoDB table used for Terraform state locking"
  - name: REGION
    description: "The AWS region to run the Terraform in"

  - name: LOKI_FORCE_DESTROY
    description: "Provide a means to force destroy the Loki storage (S3) bucket even if it contains data"
    default: "false"
  - name: CREATE_IRSA
    description: "Create the role and policy for IRSA"
    default: "true"
  - name: NAME
    description: "Cluster name"
    default: "bigbang"

components:
  - name: loki-module
    required: true
    actions:
      onCreate:
        before:
          - cmd: terraform get -update
    files:
      - source: .terraform
        target: run/loki/.terraform
      - source: main.tf
        target: run/loki/main.tf
      - source: variables.tf
        target: run/loki/variables.tf
      - source: output.tf
        target: run/loki/output.tf
      - source: terraform.tfvars
        target: run/loki/terraform.tfvars
  - name: execute-terraform
    required: true
    actions:
      onDeploy:
        before:
          - cmd: "test -d ./loki/ && chmod -R ugo+rwx ./loki/ || echo $?"
            dir: run
          - cmd: |
              terraform init -force-copy \
              -backend-config="bucket=${ZARF_VAR_STATE_BUCKET_NAME}" \
              -backend-config="key=${ZARF_VAR_STATE_KEY}" \
              -backend-config="region=${ZARF_VAR_REGION}" \
              -backend-config="dynamodb_table=${ZARF_VAR_STATE_DYNAMODB_TABLE_NAME}"
            dir: run/loki
          - cmd: terraform plan -var="create_irsa=###ZARF_PKG_TMPL_CREATE_IRSA###"
            dir: run/loki
          - cmd: sleep 15 #time to review
          - cmd: terraform apply -var="create_irsa=###ZARF_PKG_TMPL_CREATE_IRSA###" -auto-approve
            dir: run/loki
      onRemove:
        before:
          - cmd: |
              if [ -d "run/loki" ]; then
                cd run/loki
                if [ "$(terraform output force_destroy)" = true ]; then
                  terraform destroy -auto-approve
                else
                  echo "Skipping remove, force_destroy is set to false"
                fi
              else
                echo "Cannot remove: run/loki directory does not exist"
              fi