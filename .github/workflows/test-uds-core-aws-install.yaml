name: Test UDS Core AWS Package

on:
  workflow_call:

permissions:
  id-token: write
  contents: read

jobs:
  test-clean-install:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-west-2
          role-duration-seconds: 21600

      - uses: ./.github/actions/create-zarf-package
        name: Create Zarf package
        with:
          username: ${{ secrets.REGISTRY1_USERNAME }}
          password: ${{ secrets.REGISTRY1_PASSWORD }}
          working-dir: aws/uds-core-aws
          timeout-minutes: 60

      - name: Deploy UDS Core AWS
        env:
          SHA: ${{ github.sha }}
        run: |
          zarf package deploy zarf-package-uds-core-aws-*.tar.zst \
            --set ephemeral=true \
            --set vpc_id=vpc-03c1cd73aece8bfea \
            --set vpc_cidr=192.168.0.0/16 \
            --set private_subnets=subnet-065bdf771fa18e8be,subnet-053b6dab6cf6276ea,subnet-0f381300221588640 \
            --set public_subnets=subnet-0de30cd58a6a6d763,subnet-041516854dd66437f,subnet-0283cdc0228b519ea \
            --set cluster_endpoint_public_access=true \
            --set name=uds-core-aws-${SHA:0:7} \
            --set state_bucket_name="uds-ci-state-bucket" \
            --set state_key="tfstate/ci/install/${SHA:0:7}-uds-core-aws.tfstate" \
            --set state_dynamodb_table_name="uds-ci-state-dynamodb" \
            --confirm
        working-directory: aws/uds-core-aws
        timeout-minutes: 60
      - name: Show Cluster
        run: |
          kubectl get nodes
          kubectl config get-contexts

      - name: Remove UDS Core AWS
        if: always()
        run: |
          zarf package remove zarf-package-*.tar.zst --confirm \
            --components=download-terraform,prepare-eks-module,execute-eks-module,output-eks-module,loki-module,loki-bucket,outputs,zarf-init,load-certs,preflight,download-flux,bigbang,dubbd-upgrade
          zarf package remove zarf-package-*.tar.zst --confirm  --components=destroy-eks
        working-directory: aws/uds-core-aws
        timeout-minutes: 60

      - name: Cleanup lingering bucket resources
        if: always()
        run: |
          if [ -f run/loki/main.tf ]; then
            cd run/loki
            terraform destroy
          fi
        working-directory: aws/uds-core-aws

      - name: Cleanup lingering cluster resources
        if: always()
        run: |
          if [ -f run/eks/main.tf ]; then
            cd run/eks
            terraform destroy
          fi
        working-directory: aws/uds-core-aws