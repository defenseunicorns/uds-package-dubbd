name: Test DUBBD AWS Package

on:
  push:

permissions:
  id-token: write
  contents: read
      
jobs:
  test-clean-k3d-install:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      - uses: ./.github/actions/create-bb-package
        with:
          username: ${{ secrets.REGISTRY1_USERNAME }}
          password: ${{ secrets.REGISTRY1_PASSWORD }}
          working-dir: aws
          download-init-package: true        
          timeout-minutes: 60

      - name: create_cluster
        uses: defenseunicorns/uds-aws-ci-k3d@action
        with:
          cluster_action: create
          aws_assume_role: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}

      - name: Show Cluster
        run: |
          kubectl get nodes
          kubectl config get-contexts

      - name: Zarf init
        run: |
          zarf init -a amd64 --components=git-server --confirm

      - name: Deploy DUBBD-AWS
        env:
          SHA: ${{ github.sha }}
        run: |
          echo ${{ steps.get_cluster_name.outputs.eks_cluster_name }}

          zarf package deploy zarf-package-*.tar.zst \
            --set loki_force_destroy=true \
            --set name=${{ steps.get_cluster_name.outputs.eks_cluster_name }} \
            --set state_bucket_name="uds-ci-state-bucket" \
            --set state_key="tfstate/ci/install/${SHA:0:7}-state-bucket.tfstate" \
            --set state_dynamodb_table_name="uds-ci-state-dynamodb" \
            --confirm
        working-directory: aws
        timeout-minutes: 60

      - name: Remove DUBBD-AWS
        if: always()
        run: zarf package remove zarf-package-*.tar.zst --confirm
        working-directory: aws
        timeout-minutes: 60

      - name: destroy_cluster
        uses: defenseunicorns/uds-aws-ci-k3d@action
        with:
          cluster_action: destroy
          aws_assume_role: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}