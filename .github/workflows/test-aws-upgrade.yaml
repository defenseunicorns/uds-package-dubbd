name: Test DUBBD AWS Upgrade

on:
  workflow_call:

permissions:
  id-token: write
  contents: read

jobs:
  test-upgrade:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Run this step first so we can fail fast in case an invalid package name is provided
      - name: Get latest package version to upgrade from
        id: latest-package-version
        uses: ./.github/actions/latest-package-version
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          package-name: packages/dubbd-aws

      - uses: ./.github/actions/create-bb-package
        with:
          username: ${{ secrets.REGISTRY1_USERNAME }}
          password: ${{ secrets.REGISTRY1_PASSWORD }}
          working-dir: aws
          download-init-package: true
          timeout-minutes: 60

      - name: Create k3d cluster
        id: create-cluster
        uses: defenseunicorns/uds-aws-ci-k3d@update-script-path
        with:
          cluster-action: create
          aws-assume-role: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          aws-region: us-west-2
      
      - name: Zarf init
        run: |
          zarf init -a amd64 --components=git-server --confirm

      - name: Deploy latest package version
        env:
          SHA: ${{ github.sha }}
        run: |
          zarf package deploy \
            oci://ghcr.io/defenseunicorns/packages/dubbd-aws:${{ steps.latest-package-version.outputs.latest-package-version }} \
            --set loki_force_destroy=true \
            --set name=${{ steps.get_cluster_name.outputs.eks_cluster_name }} \
            --set state_bucket_name="uds-ci-state-bucket" \
            --set state_key="tfstate/ci/upgrade/${SHA:0:7}-state-bucket.tfstate" \
            --set state_dynamodb_table_name="uds-ci-state-dynamodb" \
            --confirm
        working-directory: aws
        timeout-minutes: 60

      - name: Deploy DUBBD-AWS
        env:
          SHA: ${{ github.sha }}
        run: |
          echo ${{ steps.get_cluster_name.outputs.eks_cluster_name }}
          zarf package deploy zarf-package-*.tar.zst \
            --set loki_force_destroy=true \
            --set name=${{ steps.get_cluster_name.outputs.eks_cluster_name }} \
            --set state_bucket_name="uds-ci-state-bucket" \
            --set state_key="tfstate/ci/upgrade/${SHA:0:7}-state-bucket.tfstate" \
            --set state_dynamodb_table_name="uds-ci-state-dynamodb" \
            --confirm
        working-directory: aws
        timeout-minutes: 60

      - name: Remove DUBBD-AWS
        if: always()
        run: zarf package remove zarf-package-*.tar.zst --confirm
        working-directory: aws
        timeout-minutes: 60
        continue-on-error: true

      - name: Teardown k3d cluster
        if: always()
        uses: defenseunicorns/uds-aws-ci-k3d@update-script-path
        with:
          cluster-action: destroy
