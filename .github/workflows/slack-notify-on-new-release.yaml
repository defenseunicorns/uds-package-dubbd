name: Slack Notification on Version Release

on:
  push:
    branches:
      - faux-main-you-can-delete-me
      - slack-message-on-new-version-III

jobs:
  send-notification:
    runs-on: ubuntu-latest
    name: New version released
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Latest Release
        id: get_release
        run: |
          release_json=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          release_tag=$(echo "$release_json" | jq -r '.tag_name')
          echo "RELEASE_TAG=$release_tag" >> $GITHUB_ENV

          release_body=$(echo "$release_json" | jq -r '.body')
          release_body="$(echo "$release_body" | sed -z 's/\n/\\n/g')"
          echo "RELEASE_BODY=$release_body" >> $GITHUB_ENV
          echo "---"
          echo $release_body

      - name: Send Slack notification
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'uds-new-release'
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":mega: DUBBD ${{ env.RELEASE_TAG }} is published!",
                    "emoji": true
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ env.RELEASE_BODY }}"
                  }
                }, 
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "text": "*Sally* has requested you set the deadline for the Nano launch project",
                    "type": "mrkdwn"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
