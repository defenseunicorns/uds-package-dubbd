name: Test DUBBD AWS Package

on:
  workflow_call:

permissions:
  id-token: write
  contents: read

jobs:
  test-clean-install:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-west-2
          role-duration-seconds: 21600

      - name: Add k3d override values to DUBBD AWS package
        run: yq -i '.components[] |= select(.name == "bigbang").extensions.bigbang.valuesFiles += ["../values/k3d-overrides.yaml"]' zarf.yaml
        working-directory: aws/dubbd-aws

      - uses: ./.github/actions/create-zarf-package
        name: Create Zarf package
        with:
          username: ${{ secrets.REGISTRY1_USERNAME }}
          password: ${{ secrets.REGISTRY1_PASSWORD }}
          working-dir: aws/dubbd-aws
          download-init-package: true        
          timeout-minutes: 60

      - name: Create k3d cluster
        id: create-cluster
        # renovate: datasource=github-tags depName=defenseunicorns/uds-aws-ci-k3d versioning=semver
        uses: defenseunicorns/uds-aws-ci-k3d@v0.0.3
        with:
          cluster-action: create
          aws-assume-role: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          aws-region: us-west-2

      - name: Zarf init
        run: |
          zarf init -a amd64 --components=git-server --confirm

      - name: Deploy DUBBD-AWS
        env:
          SHA: ${{ github.sha }}
        run: |
          zarf package deploy zarf-package-*.tar.zst \
            --set loki_force_destroy=true \
            --set name="dubbd-aws-install-${SHA:0:7}" \
            --set state_bucket_name="uds-ci-state-bucket" \
            --set state_key="tfstate/ci/install/${SHA:0:7}-dubbd-aws.tfstate" \
            --set state_dynamodb_table_name="uds-ci-state-dynamodb" \
            --confirm
        working-directory: aws/dubbd-aws
        timeout-minutes: 60

      - name: Remove DUBBD-AWS
        if: always()
        run: zarf package remove zarf-package-*.tar.zst --confirm
        working-directory: aws/dubbd-aws
        timeout-minutes: 60

      - name: Teardown k3d cluster
        if: always()
        # renovate: datasource=github-tags depName=defenseunicorns/uds-aws-ci-k3d versioning=semver
        uses: defenseunicorns/uds-aws-ci-k3d@v0.0.3
        with:
          cluster-action: destroy