name: Test Loki Bucket

on:
  workflow_call:
  pull_request:
    branches:
      - main
    paths:
      - 'aws/loki/**'

permissions:
  id-token: write
  contents: read

jobs:
  test-loki-bucket-tf:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: aws/loki/test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-west-2
          role-duration-seconds: 21600

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'aws/loki/test/go.mod'

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2

      - name: Run Loki Tests
        run: |
          go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: Upload test log
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error

  test-loki-bucket-zarf:
    needs: test-loki-bucket-tf
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: aws/loki/test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-west-2
          role-duration-seconds: 21600

      - name: Install Zarf
        uses: defenseunicorns/setup-zarf@main
        with:
          # renovate: datasource=github-tags depName=defenseunicorns/zarf versioning=semver
          version: v0.27.1
          download-init-package: ${{ inputs.download-init-package }}

      - name: Build Loki Zarf Package
        working-directory: aws/loki
        run: |
          zarf package create --confirm

      - name: Deploy Loki Zarf Package
        working-directory: aws/loki
        run: |
          zarf package deploy zarf-package-*.tar.zst \
            --set loki_force_destroy=true \
            --set create_irsa=false \
            --set state_bucket_name="uds-ci-state-bucket" \
            --set state_key="tfstate/ci/loki-tf/${SHA:0:7}-state-bucket.tfstate" \
            --set state_dynamodb_table_name="uds-ci-state-dynamodb" --confirm

      - name: Remove Loki Zarf Package
        working-directory: aws/loki
        if: always()
        run: |
          zarf package remove zarf-package-*.tar.zst --confirm