name: Update Release Info From Tag

on:
  workflow_dispatch:
    inputs:
      tag-name:
        description: 'GitHub tag name'
        required: true
      release-body-top:
        description: 'Content to add to the top of the release body'
        default: '[//]: # (MODIFIED BY WORKFLOW)'
      release-body-bottom:
        description: 'Content to add to the bottom of the release body'
        default: '[//]: # (MODIFIED BY WORKFLOW)'
      mark-release-broken:
        description: 'Select this option if there is an issue with the release'
        type: boolean
        required: true

  workflow_call:
    inputs:
      tag-name:
        required: true
        type: string
      release-body-top:
        type: string
      release-body-bottom:
        type: string

jobs:
  update-release-body:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Modify Release Body
        id: modify-release-body
        run: |
          # set inputs to vars
          TAG_NAME="v${{ inputs.tag-name }}"
          ADD_TO_TOP='${{ inputs.release-body-top }}'
          ADD_TO_BOTTOM='${{ inputs.release-body-bottom }}'

          # if release is broken, set default warning message for top of the body
          if [[ "${{ inputs.mark-release-broken }}" == "true" ]]; then
             ADD_TO_TOP=">[!WARNING]\n>PLEASE USE A DIFFERENT VERSION (there are known issues with this release)"
          fi

          # get body for release and output to file
          gh release view "${TAG_NAME}" -R ${{ github.repository }} --json body --jq '.body' > "${TAG_NAME}-release-notes.txt" && \

          # update file with inputs
          cat <(echo -e "${ADD_TO_TOP}") <(echo) "${TAG_NAME}-release-notes.txt" <(echo) <(echo -e "${ADD_TO_BOTTOM}") > "NEW-${TAG_NAME}-release-notes.txt" && \

          # replace release notes with contents of the file
          gh release edit "${TAG_NAME}" -R ${{ github.repository }} --notes-file "NEW-${TAG_NAME}-release-notes.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
