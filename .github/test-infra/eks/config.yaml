apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: "###ZARF_VAR_CLUSTER_NAME###"
  region: us-west-2
  version: "1.30"
  tags:
    PermissionsBoundary: "###ZARF_VAR_PERMISSIONS_BOUNDARY_NAME###"

# May want to look at this for testing
# privateCluster:
#   enabled: true

iam:
  withOIDC: true
  serviceRolePermissionsBoundary: "###ZARF_VAR_PERMISSIONS_BOUNDARY_ARN###"

addons:
  - name: aws-ebs-csi-driver
    configurationValues: |-
      defaultStorageClass.enabled: true
    permissionsBoundary: "###ZARF_VAR_PERMISSIONS_BOUNDARY_ARN###"
    tags:
      PermissionsBoundary: "###ZARF_VAR_PERMISSIONS_BOUNDARY_NAME###"

  - name: vpc-cni
    attachPolicyARNs:
      - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
    permissionsBoundary: "###ZARF_VAR_PERMISSIONS_BOUNDARY_ARN###"
    tags:
      PermissionsBoundary: "###ZARF_VAR_PERMISSIONS_BOUNDARY_NAME###"

managedNodeGroups:
  - name: ng-1
    instanceType: m5.2xlarge
    desiredCapacity: 3
    volumeSize: 150
    tags:
      PermissionsBoundary: "###ZARF_VAR_PERMISSIONS_BOUNDARY_NAME###"
    iam:
      instanceRolePermissionsBoundary: "###ZARF_VAR_PERMISSIONS_BOUNDARY_ARN###"
      withAddonPolicies:
        cloudWatch: true
        ebs: true
#    amiFamily: AmazonLinux2
#    ami: "###ZARF_VAR_AMI_ID###"
#    overrideBootstrapCommand: |
#      #!/bin/bash
#      /etc/eks/bootstrap.sh ###ZARF_VAR_CLUSTER_NAME### --container-runtime containerd

cloudWatch:
  clusterLogging:
    # enable specific types of cluster control plane logs
    enableTypes: ["*"]
    # all supported types: "api", "audit", "authenticator", "controllerManager", "scheduler"
    # supported special values: "*" and "all"

    # Sets the number of days to retain the logs for (see [CloudWatch docs](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html#API_PutRetentionPolicy_RequestSyntax)).
    # By default, log data is stored in CloudWatch Logs indefinitely.
    logRetentionInDays: 1
