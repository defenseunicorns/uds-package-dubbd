addons:
  keycloak:
    enabled: true
    # Cloud overlay should add these... otherwise just use
    # internal postgres as a default for local testing.
    # database:
    #   host: ###ZARF_VAR_KC_DB_HOST###
    #   type: postgres
    #   port: 5432
    #   database: ###ZARF_VAR_KC_DB_DATABASE###
    #   username: ###ZARF_VAR_KC_DB_USERNAME###
    #   password: ###ZARF_VAR_KC_DB_PASSWORD###
    ingress:
      gateway: "passthrough"
      key: "###ZARF_VAR_KEYCLOAK_KEY###"
      cert: "###ZARF_VAR_KEYCLOAK_CERT###"
    values:
      replicas: 1
      command:
        - "/opt/keycloak/bin/kc.sh"
      args:
        - "start"
      extraEnv: |-
        - name: KC_HTTPS_CERTIFICATE_FILE
          value: /opt/keycloak/conf/tls.crt
        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: /opt/keycloak/conf/tls.key
        - name: KC_HTTPS_TRUST_STORE_FILE
          value: /opt/keycloak/conf/truststore.jks
        - name: KC_HTTPS_TRUST_STORE_PASSWORD
          value: password
        - name: KC_HTTPS_CLIENT_AUTH
          value: request
        - name: KC_PROXY
          value: passthrough
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_RELATIVE_PATH
          value: /auth
        - name: KC_HOSTNAME
          value: keycloak.bigbang.dev
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_LOG_LEVEL
          value: "org.keycloak.events:DEBUG,org.infinispan:INFO,org.jgroups:INFO"
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: CUSTOM_REGISTRATION_CONFIG
          value: /opt/keycloak/conf/custom-regitration-config.yaml
      extraVolumes: |-
        - name: certauthority
          secret:
            secretName: {{ include "keycloak.fullname" . }}-certauthority
        - name: truststore
          secret:
            secretName: {{ include "keycloak.fullname" . }}-truststore
        - name: quarkusproperties
          secret:
            secretName: {{ include "keycloak.fullname" . }}-quarkusproperties
            defaultMode: 0777
        - name: customreg
          secret:
            secretName: {{ include "keycloak.fullname" . }}-customreg
            defaultMode: 0777
        - name: plugin
          emptyDir: {}
      extraVolumeMounts: |-
        - name: certauthority
          mountPath: /etc/x509/https/cas.pem
          subPath: cas.pem
          readOnly: true
        - name: plugin
          mountPath: /opt/keycloak/providers/p1-keycloak-plugin.jar
          subPath: p1-keycloak-plugin.jar
        - name: truststore
          mountPath: /opt/keycloak/conf/truststore.jks
          subPath: truststore.jks
        - name: quarkusproperties
          mountPath: /opt/keycloak/conf/quarkus.properties
          subPath: quarkus.properties
        - name: customreg
          mountPath: /opt/keycloak/conf/custom-regitration-config.yaml
          subPath: custom-regitration-config.yaml
      secrets:
        env:
          stringData:
            X509_CA_BUNDLE: /etc/x509/https/cas.pem
        certauthority:
          stringData:
            cas.pem: '{{ .Files.Get "resources/dev/dod_cas.pem" }}'
        customreg:
          stringData:
            custom-regitration-config.yaml: |-
              x509:
                # User attribute to bind to when associating PKI with a user account
                userIdentityAttribute: "usercertificate"
                # Reset on every login to "", tracks if the current login session is using PKI at all, even if not bound to the user
                userActive509Attribute: "activecac"
                # When a user with valid PKI registers, join to the listed groups
                autoJoinGroup:
                  - "/Impact Level 2 Authorized"
                  - "/Impact Level 4 Authorized"
                  - "/Impact Level 5 Authorized"
                # Policies that must match to consider the cert valid
                requiredCertificatePolicies:
                  - "2.16.840.1.101.2.1.11.5"    #id-US-dod-medium
                  - "2.16.840.1.101.2.1.11.9"    #id-US-dod-mediumhardware
                  - "2.16.840.1.101.2.1.11.10"   #id-US-dod-PIV-Auth
                  - "2.16.840.1.101.2.1.11.17"    #id-US-dod-mediumNPE
                  - "2.16.840.1.101.2.1.11.18"    #id-US-dod-medium-2048
                  - "2.16.840.1.101.2.1.11.19"    #id-US-dod-mediumHardware-2048
                  - "2.16.840.1.101.2.1.11.20"    #id-US-dod-PIV-Auth-2048
                  - "2.16.840.1.101.2.1.11.31"   #id-US-dod-peerInterop
                  - "2.16.840.1.101.2.1.11.36"   #id-US-dod-mediumNPE-112
                  - "2.16.840.1.101.2.1.11.37"   #id-US-dod-mediumNPE-128
                  - "2.16.840.1.101.2.1.11.38"   #id-US-dod-mediumNPE-192
                  - "2.16.840.1.101.2.1.11.39"   #id-US-dod-medium-112
                  - "2.16.840.1.101.2.1.11.40"   #id-US-dod-medium-128
                  - "2.16.840.1.101.2.1.11.41"   #id-US-dod-medium-192
                  - "2.16.840.1.101.2.1.11.42"   #id-US-dod-mediumHardware-112
                  - "2.16.840.1.101.2.1.11.43"   #id-US-dod-mediumHardware-128
                  - "2.16.840.1.101.2.1.11.44"   #id-US-dod-mediumHardware-192
                  - "2.16.840.1.101.2.1.11.59"   #id-US-dod-admin
                  - "2.16.840.1.101.2.1.11.60"   #id-US-dod-internalNPE-112
                  - "2.16.840.1.101.2.1.11.61"   #id-US-dod-internalNPE-128
                  - "2.16.840.1.101.2.1.11.62"   #id-US-dod-internalNPE-192
                  - "2.16.840.1.101.3.2.1.12.1"   #id-eca-medium
                  - "2.16.840.1.101.3.2.1.12.2"   #id-eca-medium-hardware
                  - "2.16.840.1.101.3.2.1.12.3"   #id-eca-medium-token
                  - "2.16.840.1.101.3.2.1.12.4"   #id-eca-medium-sha256
                  - "2.16.840.1.101.3.2.1.12.5"   #id-eca-medium-token-sha256
                  - "2.16.840.1.101.3.2.1.12.6"   #id-eca-medium-hardware-pivi
                  - "2.16.840.1.101.3.2.1.12.8"   #id-eca-contentsigning-pivi
                  - "2.16.840.1.101.3.2.1.12.9"   #id-eca-medium-device-sha256
                  - "2.16.840.1.101.3.2.1.12.10" #id-eca-medium-hardware-sha256
                  - "2.16.840.1.101.3.2.1.3.4"   #id-fpki-certpcy-highAssurance
                  - "2.16.840.1.101.3.2.1.3.7"   #id-fpki-common-hardware
                  - "2.16.840.1.101.3.2.1.3.12"   #id-fpki-certpcy-mediumHardware
                  - "2.16.840.1.101.3.2.1.3.13"   #id-fpki-common-authentication
                  - "2.16.840.1.101.3.2.1.3.16"   #id-fpki-common-High
                  - "2.16.840.1.101.3.2.1.3.18"   #id-fpki-certpcy-pivi-hardware
                  - "2.16.840.1.101.3.2.1.3.20"   #id-fpki-certpcy-pivi-contentSigning
                  - "2.16.840.1.101.3.2.1.3.36"   #id-fpki-common-devicesHardware
                  - "2.16.840.1.101.3.2.1.3.38"   #id-fpki-certpcy-mediumDeviceHardware
                  - "2.16.840.1.101.3.2.1.3.39"   #id-fpki-common-piv-contentSigning
                  - "2.16.840.1.101.3.2.1.3.24"   #id-fpki-SHA1-hardware
              # White-list clients that do not require P1 group protection logic
              groupProtectionIgnoreClients:
                - "account"
                - "account-console"
                - "broker"
                - "security-admin-console"
                # Nexus hardcodes the client id so the group logic in custom plugin code must be skipped
                - "https://nexus.bigbang.dev/service/rest/v1/security/saml/metadata"
              # When a user registers without matching any top-level domain in emailMatchAutoJoinGroup, join to the listed groups
              noEmailMatchAutoJoinGroup:
                - "/Randos"
              # When a user registers with the given top-level domain, join to the listed groups
              emailMatchAutoJoinGroup:
                - description: DoD IL4 Users
                  groups:
                    - "/Impact Level 2 Authorized"
                    - "/Impact Level 4 Authorized"
                  domains:
                    - ".gov"
                    - ".mil"
                - description: DoD IL2 Users
                  groups:
                    - "/Impact Level 2 Authorized"
                  domains:
                    - "@test-domain.very-long-fake-tld"
        quarkusproperties:
          stringData:
            quarkus.properties: |-
              quarkus.http.non-application-root-path=/
              # custom redirects
              quarkus.kc-routing.path-redirect./=/auth/realms/###ZARF_VAR_REALM###/account
              quarkus.kc-routing.path-redirect./auth=/auth/realms/###ZARF_VAR_REALM###/account
              quarkus.kc-routing.path-redirect./register=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/registrations?client_id=account&response_type=code
              quarkus.kc-routing.path-prefix./oauth/authorize=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/auth
              quarkus.kc-routing.path-filter./api/v4/user=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/userinfo
              quarkus.kc-routing.path-filter./oauth/token=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/token
              # block metrics and health enpoints from being exposed through the istio ingress
              quarkus.kc-routing.path-recursive-block./metrics=8443
              quarkus.kc-routing.path-recursive-block./health=8443
        truststore:
          data:
            truststore.jks: |-
              {{ .Files.Get "resources/dev/truststore.jks" | b64enc }}
      extraInitContainers: |-
        - name: plugin
          image: registry1.dso.mil/ironbank/big-bang/p1-keycloak-plugin:3.2.0
          imagePullPolicy: Always
          command:
          - sh
          - -c
          - |
            cp /app/p1-keycloak-plugin.jar /init
            ls -l /init
          volumeMounts:
          - name: plugin
            mountPath: "/init"
