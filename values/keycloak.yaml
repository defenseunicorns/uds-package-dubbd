addons:
  keycloak:
    enabled: true
    # Cloud overlay should add these... otherwise just use
    # internal postgres as a default for local testing.
    # database:
    #   host: ###ZARF_VAR_KC_DB_HOST###
    #   type: postgres
    #   port: 5432
    #   database: ###ZARF_VAR_KC_DB_DATABASE###
    #   username: ###ZARF_VAR_KC_DB_USERNAME###
    #   password: ###ZARF_VAR_KC_DB_PASSWORD###
    ingress:
      gateway: "passthrough"
      key: "###ZARF_VAR_KEYCLOAK_KEY###"
      cert: "###ZARF_VAR_KEYCLOAK_CERT###"
    values:
      replicas: 1
      command:
        - "/opt/keycloak/bin/kc.sh"
      args:
        - "start"
        - "--import-realm"
      extraEnv: |-
        - name: KC_HTTPS_CERTIFICATE_FILE
          value: /opt/keycloak/conf/tls.crt
        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: /opt/keycloak/conf/tls.key
        - name: KC_HTTPS_TRUST_STORE_FILE
          value: /opt/keycloak/conf/truststore.jks
        - name: KC_HTTPS_TRUST_STORE_PASSWORD
          value: password
        - name: KC_HTTPS_CLIENT_AUTH
          value: request
        - name: KC_PROXY
          value: passthrough
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_RELATIVE_PATH
          value: /auth
        - name: KC_HOSTNAME
          value: keycloak.bigbang.dev
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_LOG_LEVEL
          value: "org.keycloak.events:DEBUG,org.infinispan:INFO,org.jgroups:INFO"
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
      extraVolumes: |-
        - name: realm
          secret:
            secretName: {{ include "keycloak.fullname" . }}-realm
        - name: customreg
          secret:
            secretName: {{ include "keycloak.fullname" . }}-customreg
        - name: certauthority
          secret:
            secretName: {{ include "keycloak.fullname" . }}-certauthority
        - name: truststore
          secret:
            secretName: {{ include "keycloak.fullname" . }}-truststore
        - name: quarkusproperties
          secret:
            secretName: {{ include "keycloak.fullname" . }}-quarkusproperties
            defaultMode: 0777
        - name: custom-theme
          emptyDir: {}
        - name: plugin
          emptyDir: {}
      extraVolumeMounts: |-
        - name: customreg
          mountPath: /opt/keycloak/conf/customreg.yaml
          subPath: customreg.yaml
          readOnly: true
        - name: realm
          mountPath: /opt/keycloak/data/import/realm.json
          subPath: realm.json
        - name: certauthority
          mountPath: /etc/x509/https/cas.pem
          subPath: cas.pem
          readOnly: true
        - name: plugin
          mountPath: /opt/keycloak/providers/p1-keycloak-plugin.jar
          subPath: p1-keycloak-plugin.jar
        - name: custom-theme
          mountPath: /opt/keycloak/providers/custom-theme.jar
          subPath: custom-theme.jar
        - name: truststore
          mountPath: /opt/keycloak/conf/truststore.jks
          subPath: truststore.jks
        - name: quarkusproperties
          mountPath: /opt/keycloak/conf/quarkus.properties
          subPath: quarkus.properties
      secrets:
        realm:
          stringData:
            realm.json: '{{ .Files.Get "resources/dev/baby-yoda.json" }}'
        customreg:
          stringData:
            customreg.yaml: '{{ .Files.Get "resources/dev/baby-yoda.yaml" }}'
        env:
          stringData:
            X509_CA_BUNDLE: /etc/x509/https/cas.pem
            KEYCLOAK_ADMIN: ###ZARF_VAR_KC_ADM_USER###
            KEYCLOAK_ADMIN_PASSWORD: ###ZARF_VAR_KC_ADM_PASSWORD###
            CUSTOM_REGISTRATION_CONFIG: /opt/keycloak/conf/customreg.yaml
        certauthority:
          stringData:
            cas.pem: '{{ .Files.Get "resources/dev/dod_cas.pem" }}'
        quarkusproperties:
          stringData:
            quarkus.properties: |-
              quarkus.http.non-application-root-path=/
              # custom redirects
              quarkus.kc-routing.path-redirect./=/auth/realms/###ZARF_VAR_REALM###/account
              quarkus.kc-routing.path-redirect./auth=/auth/realms/###ZARF_VAR_REALM###/account
              quarkus.kc-routing.path-redirect./register=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/registrations?client_id=account&response_type=code
              quarkus.kc-routing.path-prefix./oauth/authorize=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/auth
              quarkus.kc-routing.path-filter./api/v4/user=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/userinfo
              quarkus.kc-routing.path-filter./oauth/token=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/token
              # block metrics and health enpoints from being exposed through the istio ingress
              quarkus.kc-routing.path-recursive-block./metrics=8443
              quarkus.kc-routing.path-recursive-block./health=8443
        truststore:
          data:
            truststore.jks: |-
              {{ .Files.Get "resources/dev/truststore.jks" | b64enc }}
      extraInitContainers: |-
        - name: plugin
          image: registry1.dso.mil/ironbank/big-bang/p1-keycloak-plugin:3.2.0
          imagePullPolicy: Always
          command:
          - sh
          - -c
          - |
            cp /app/p1-keycloak-plugin.jar /init
            ls -l /init
          volumeMounts:
          - name: plugin
            mountPath: "/init"
        - name: custom-theme
          image: ghcr.io/kirankt/keycloak-custom-theme:0.1.1
          imagePullPolicy: Always
          command:
          - sh
          - -c
          - |
            cp /app/custom-theme.jar /init
            ls -l /init
          volumeMounts:
          - name: custom-theme
            mountPath: "/init"
