istio:
  enabled: true
  enterprise: true
  ingressGateways:
    admin-ingressgateway:
      type: "LoadBalancer"
    public-ingressgateway: null
    tenant-ingressgateway:
      type: "LoadBalancer"
  values:
    authservice:
      enabled: true
    meshConfig:
      meshMTLS:
        minProtocolVersion: TLSV1_3
    istiod:
      resources:
        requests:
          cpu: "100m"
          memory: "1Gi"
        limits:
          cpu: "500m"
          memory: "1Gi"
      hpaSpec:
        minReplicas: 1
        maxReplicas: 3
        # Requires k8s 1.23+; autoscaling/v2
        metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
    values:
      global:
        proxy:
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  gateways:
    admin:
      ingressGateway: admin-ingressgateway
      hosts:
        - "*.{{ .Values.domain }}"
      tls:
        key: |
          ###ZARF_VAR_PUBLIC_KEY###
        cert: |
          ###ZARF_VAR_PUBLIC_CERT###
        minProtocolVersion: "TLSV1_3"
    public: null
    tenant:
      ingressGateway: tenant-ingressgateway
      hosts:
        - "*.{{ .Values.domain }}"
      tls:
        key: |
          ###ZARF_VAR_PUBLIC_KEY###
        cert: |
          ###ZARF_VAR_PUBLIC_CERT###
        minProtocolVersion: "TLSV1_3"
istioOperator:
  enabled: true
  values:
    operator:
      resources:
        limits:
          cpu: "500m"
          memory: "256Mi"
        requests:
          cpu: "100m"
          memory: "256Mi"
