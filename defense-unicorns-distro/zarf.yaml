kind: ZarfPackageConfig
metadata:
  name: big-bang
  description: "Defense Unicorns Big Bang Distro"
  version: "###ZARF_PKG_TMPL_BIGBANG_VERSION###"
  url: https://p1.dso.mil/products/big-bang
  image: https://p1.dso.mil/img/Big_Bang_Color_Logo_White_text.de14c793.webp
  # Big Bang / Iron Bank are only amd64
  architecture: amd64

variables:
- name: BIGBANG_VERSION
- name: DOMAIN
  default: bigbang.dev
  prompt: false
- name: PUBLIC_CERT_FILE
  default: bigbang.dev.cert
  description: "This file contains the cert for the public ingress gateway"
  prompt: false
- name: PUBLIC_KEY_FILE
  default: bigbang.dev.key
  description: "This file contains the key for the public ingress gateway"
  prompt: false
- name: ADMIN_CERT_FILE
  default: bigbang.dev.cert
  description: "This file contains the cert for the admin ingress gateway"
  prompt: false
- name: ADMIN_KEY_FILE
  default: bigbang.dev.key
  description: "This file contains the key for the admin ingress gateway"
  prompt: false

- name: MONITORING_PROMETHEUS_PVC_SIZE
  default: "50Gi"
  description: Size of PVC for Prometheus
  prompt: false
- name: MONITORING_GRAFANA_PVC_SIZE
  default: "10Gi"
  description: Size of PVC for Grafana
  prompt: false
- name: LOKI_PVC_SIZE
  default: "40Gi"
  description: Size of the PVC for Loki when running in dev mode

- name: SLACK_URL
  default: https://none.dev
  description: Slack Webhook URL for alerts
- name: SLACK_CHANNEL
  default: "#alerts"
  description: Slack channel for alerts

components:
  - name: load-certs
    required: true
    files:
      - source: bigbang.dev.cert
        target: bigbang.dev.cert
      - source: bigbang.dev.key
        target: bigbang.dev.key
      - source: scripts/cat_cert.sh
        target: cat_certs.sh
        executable: true
      - source: scripts/cat_key.sh
        target: cat_key.sh
        executable: true
    actions:
      onDeploy:
        after:
        - cmd: ./cat_certs.sh
          description: read the cert
          setVariables:
            - name: PUBLIC_CERT
        - cmd: ./cat_key.sh
          description: read the cert
          setVariables:
            - name: PUBLIC_KEY
        - cmd: rm cat_certs.sh
        - cmd: rm cat_key.sh
  - name: preflight
    required: true
    actions:
      onDeploy:
        before:
        - cmd: "./zarf tools kubectl version --short || true"
          setVariables:
            - name: OUTPUT
        - cmd: "./zarf tools kubectl get helmrelease bigbang -n bigbang &>/dev/null && echo true || echo false"
          setVariables:
            - name: IS_UPGRADE
        after:
        - cmd: "./preflight.sh"
    files:
    - source: scripts/preflight.sh
      target: preflight.sh
      executable: true
  - name: bigbang
    required: true
    actions:
      onDeploy:
        after:
          - cmd: ./zarf tools kubectl patch helmrelease -n bigbang bigbang --type=merge -p '{"metadata":{"annotations":{"reconcile.fluxcd.io/requestedAt":"'`date '+%F_%H:%M:%S.%s%z'`'"}}}'
            description: "Patch BigBang to force an update on updates"
      onRemove:
        before:
          - cmd: |
              export PATH=$(dirname ./zarf):$PATH
              ./teardown.sh
            description: "Tear down Big Bang"
    files:
      - source: scripts/teardown.sh
        target: teardown.sh
        executable: true
    manifests:
      - name: slack-alerts
        files:
          - manifests/alerts/flux-alerts.yaml
    extensions:
      bigbang:
        version: "###ZARF_PKG_TMPL_BIGBANG_VERSION###"
        valuesFiles:
        - ../values/values.yaml
        - ../values/kyverno.yaml
        - ../values/istio.yaml
        - ../values/loki.yaml
        - ../values/promtail.yaml
        - ../values/kiali.yaml
        - ../values/monitoring.yaml
        - ../values/neuvector.yaml
        - ../values/tempo.yaml
